package edu.fmi.ir.bookindex;

import java.io.File;
import java.io.IOException;
import java.util.Scanner;

import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.document.TextField;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.store.FSDirectory;
import org.apache.lucene.util.Version;

public class BookIndex {

	private final IndexWriter writer;

	private static final String FIELD_CONTENT = "content";

	public BookIndex() throws IOException {
		final FSDirectory indexDirectory = FSDirectory.open(new File(
				"indexDirectory"));
		final IndexWriterConfig config = new IndexWriterConfig(
				Version.LUCENE_46, new StandardAnalyzer(Version.LUCENE_46));
		writer = new IndexWriter(indexDirectory, config);
	}

	public void index(final String title, final String bookPath) {
		final Document document = new Document();
		try {
			final Scanner scanner = new Scanner(new File(bookPath));
			final StringBuilder builder = new StringBuilder();
			while (scanner.hasNextLine()) {
				builder.append(scanner.nextLine());
			}
			document.add(new TextField(FIELD_CONTENT, builder.toString(),
					Field.Store.YES));
			document.add(new TextField(FIELD_TITLE, title));
			writer.addDocument(document);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public void indexDirectory(final String directoryPath) throws IOException {
		final File directory = new File(directoryPath);
		final String[] filenames = directory.list();
		for (final String filename : filenames) {
			index(filename.substring(0, filename.lastIndexOf(".")),
					directoryPath + File.separator + filename);
		}
		writer.commit();
	}

	public static void main(String[] args) throws IOException {
		final BookIndex index = new BookIndex();
		index.indexDirectory(args[0]);
	}

}
